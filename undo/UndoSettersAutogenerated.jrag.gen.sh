#!/bin/bash

# run this script from this directory (Refactoring/undo)
# rerun when you change *.ast or the refine below

echo "aspect UndoSettersAutogenerated {"
echo "// AUTOGENERATED (script: UndoSettersAutogenerated.jrag.gen.sh)"

function IDrecursion {
	PATTERN="$1"
	NAME="$2"
	VAR="$3"
	TP="$4"
	SOFAR="$5"
	ASPEC="$6"


	if [ ! -z "$7" ]; then
		# we have an agrument, looking for inherited
		II=`find ../../Java* ../../Refactoring -name "*.ast" | xargs grep -E "\\ ?:\\ ?$7(\\ ?[^;]::=|;)" | grep -vE "$PATTERN" | sed 's/abstract //' | cut -f1 -d' ' | sed -r 's/^[^:]*\///'`
	else
		II=`find ../../Java* ../../Refactoring -name "*.ast" | xargs grep -E "$PATTERN" | sed 's/abstract //' | cut -f1 -d' ' | sed -r 's/^[^:]*\///'`
	fi;

	for i in $II; do

		#echo "5:$7"
		ASPECT=`echo -n $i | sed -r 's/\.ast:.*//'`
		if [ ! -z "$7" ]; then
			ASPECT="$ASPEC"
		fi;
		TYPE=`echo -n $i | sed -r 's/[^.]*\.ast://'`
		if [ "`echo "$SOFAR" | grep "$TYPE" | wc -l`" != "0" ]; then
			continue;
		fi;

		echo "
	refine $ASPECT public void $TYPE.set$NAME(final $TP value) {
		if (Program.isRecordingASTChanges()) {
			Program.addUndoAction(new ASTModificationReplaceEdit(this.isInTree(), this, ${NAME}start, ${NAME}end, $VAR, value) {
				@Override
				public void undo() {
					refined(oldValue);
				}
				@Override
				public String toString() {
					return \"$TYPE.set$NAME (ReplaceEdit)\";
				}
				@Override
				public void redo() {
					if (Program.isRecordingASTChanges()) Program.addUndoAction(this);
					refined(value);
				}
			});
		}
		refined(value);
	}
	"
		IDrecursion "$PATTERN" "$NAME" "$VAR" "$TP" "$SOFAR\n$TYPE" "$ASPECT" "$TYPE"
	done;
}
# all need to be strings
IDrecursion "(<ID:(java\\.lang\\.)?String>|<ID>)" "ID" "tokenString_ID" "String" "" ""
IDrecursion "(<Name:(java\\.lang\\.)?String>|<Name>)" "Name" "tokenString_Name" "String" "" ""
IDrecursion "(<Package:(java\\.lang\\.)?String>|<Package>)" "Package" "tokenString_Package" "String" "" ""


echo "}"

